# -*- coding: utf-8 -*-
# Generated by Django 1.10.2 on 2016-11-22 19:28
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Alert',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('message', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='ClientBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('hostname', models.CharField(max_length=200)),
                ('ip_address', models.CharField(max_length=15)),
                ('monitoring_timespan', models.IntegerField(default=86400)),
                ('is_configured', models.BooleanField(default=False)),
                ('last_update', models.IntegerField(default=-1)),
                ('state', models.IntegerField(db_index=True, default=0)),
                ('configuration_pending', models.BooleanField(default=True)),
                ('consecutive_probes_sent_count', models.IntegerField(default=1)),
                ('base_probing_interval', models.IntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='MonitoredProperty',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20)),
                ('type', models.CharField(max_length=20)),
                ('monitored', models.BooleanField(default=True)),
                ('client', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='monitored_properties', to='acquisition_presentation_server.ClientBase')),
            ],
        ),
        migrations.CreateModel(
            name='Threshold',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.IntegerField(default=0)),
                ('value', models.IntegerField()),
                ('cycles_above_value', models.IntegerField(default=0)),
                ('max_cycle_above_value', models.IntegerField(default=1)),
                ('monitored_property', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='thresholds', to='acquisition_presentation_server.MonitoredProperty')),
            ],
        ),
        migrations.AddField(
            model_name='clientbase',
            name='property_on_dashboard',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='acquisition_presentation_server.MonitoredProperty'),
        ),
        migrations.AddField(
            model_name='alert',
            name='client',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alerts', to='acquisition_presentation_server.ClientBase'),
        ),
        migrations.AddField(
            model_name='alert',
            name='threshold',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='alerts', to='acquisition_presentation_server.Threshold'),
        ),
        migrations.CreateModel(
            name='BlockedClient',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('acquisition_presentation_server.clientbase',),
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('acquisition_presentation_server.clientbase',),
        ),
        migrations.CreateModel(
            name='PendingClient',
            fields=[
            ],
            options={
                'proxy': True,
            },
            bases=('acquisition_presentation_server.clientbase',),
        ),
    ]
